<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>爱捣鼓的小水木的博客</title><link>https://blog.mymaskking.dpdns.org/</link><description>一个等着裁员的java程序猿，每天无所事事，只想搞钱，喜欢钻研各种实用的技能，讨厌天天做工作上的项目，对自己毫无实用价值。&lt;BR/&gt;&lt;div class='listLabels'&gt;&lt;span class='Label LabelName'style='background-color:#efe1e1'&gt;&lt;object&gt;&lt;a style='color:#000000'href='https://v.douyin.com/UFXv95UxBbQ/'data-click-setup='true'&gt;抖音&lt;/a&gt;&lt;/object&gt;&lt;/span&gt;&lt;span class='Label LabelName'style='background-color:#a2eeef'&gt;&lt;object&gt;&lt;a style='color:#fff'href='https://kdocs.cn/l/clf4xOs5a3Q1'data-click-setup='true'&gt;WPS万能文档&lt;/a&gt;&lt;/object&gt;&lt;/span&gt;&lt;span class='Label LabelName'style='background-color:#ff0c0c'&gt;&lt;object&gt;&lt;a style='color:#fff'href='https://www.youtube.com/channel/UCeHFivb01FfFIL7kciY6KFg'data-click-setup='true'&gt;YouTobe&lt;/a&gt;&lt;/object&gt;&lt;/span&gt;&lt;span class='Label LabelTime'style='background-color:#ff4f9a'&gt;&lt;a style='color:#fff'href='https://b23.tv/rGe89DU' data-click-setup='true'&gt;哔哩哔哩&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;</description><copyright>爱捣鼓的小水木的博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/41733240?v=4</url><title>avatar</title><link>https://blog.mymaskking.dpdns.org/</link></image><lastBuildDate>Mon, 14 Apr 2025 14:32:56 +0000</lastBuildDate><managingEditor>爱捣鼓的小水木的博客</managingEditor><ttl>60</ttl><webMaster>爱捣鼓的小水木的博客</webMaster><item><title>Gmeek个人博客(增强版)</title><link>https://blog.mymaskking.dpdns.org//post/Gmeek-ge-ren-bo-ke-%28-zeng-qiang-ban-%29.html</link><description># **基于** [**Gmeek**](https://github.com/Meekdai/Gmeek)**的个人博客做了很多改善**

## UI改善

## 增加了其他Markdown编辑的功能

# [Gmeek](https://github.com/Meekdai/Gmeek)的原理流程

![](http://www.kdocs.cn/api/v3/office/copy/YU5aZW5GWUZaMlBXcUJLTUQ0WDhDalg1SERNR1VNRHNiVFY5bndYOHE3OUFuQVBOY0l4a0czTzQ1ZVhhRUZoVlRnSjB5aW41Uzl0TWJlRllSbVF5SEorOEJ1ZlFFcFRBaUY5U05sekRxa3F4N0Zya1RpUjNyM0w2OU9Ja21PcGpkVmR2eVBrSWpHakZDckMzVUd2bnhzWE9IQ1RSSTd2ZGpCQWF1em9renJ1dGNCN05kREtpcTVBdUYwcUtManJBcXlDWXJSakZWWE1yWDc2ZkJNc1lHT3VXV2E1cGhBS29zeVgxcnd3OHBjQ3l0dkYyREQwSHo5N1IveFBycDdSczRzZjdUNktjOXhvPQ==/attach/object/EUUTS6I7ADQAK? 'po_bheegdgbihhhba')

# [Gmeek增强](https://github.com/MyMaskKing/MyMaskKing.github.io.git)的原理流程

![](http://www.kdocs.cn/api/v3/office/copy/YU5aZW5GWUZaMlBXcUJLTUQ0WDhDalg1SERNR1VNRHNiVFY5bndYOHE3OUFuQVBOY0l4a0czTzQ1ZVhhRUZoVlRnSjB5aW41Uzl0TWJlRllSbVF5SEorOEJ1ZlFFcFRBaUY5U05sekRxa3F4N0Zya1RpUjNyM0w2OU9Ja21PcGpkVmR2eVBrSWpHakZDckMzVUd2bnhzWE9IQ1RSSTd2ZGpCQWF1em9renJ1dGNCN05kREtpcTVBdUYwcUtManJBcXlDWXJSakZWWE1yWDc2ZkJNc1lHT3VXV2E1cGhBS29zeVgxcnd3OHBjQ3l0dkYyREQwSHo5N1IveFBycDdSczRzZjdUNktjOXhvPQ==/attach/object/JXQUS6I7AAAFU? 'po_bheegdhaijjcja')

----------

这个仓库使用 GitHub Action 工作流（`issue-publisher.yml`）将 Markdown 文件自动同步为 GitHub Issues。</description><guid isPermaLink="true">https://blog.mymaskking.dpdns.org//post/Gmeek-ge-ren-bo-ke-%28-zeng-qiang-ban-%29.html</guid><pubDate>Mon, 14 Apr 2025 13:45:15 +0000</pubDate></item><item><title>Linux磁盘管理</title><link>https://blog.mymaskking.dpdns.org//post/Linux-ci-pan-guan-li.html</link><description>#### 磁盘管理

👋

#### **MBR(主启动记录模式)**

**最多4个主分区，1个扩展分区(无法储存数据，只能在创建逻辑分区保存数据)**

1.  先分区

fdisk /dev/sdb

-   n新建分区

-   p打印分区信息

1.  格式化分区

mkfs -t xfs /dev/sdb1

修改分区类型 mkfs.xfs -f /dev/sdb1

1.  挂载分区

mount /dev/sdb1 /data #临时修改

vi /etc/fstdb #永久修改

mount -a #读取mount(/etc/fstdb)的内容

#### **GPT分区（推荐）**

**无限分区**

1.  先分区

parted /dev/sdb

(parted)mktable gpt

(parted)mkpart

(parted)print

1.  格式化和挂载

#### 逻辑分区 （底层的空间单位为PE,默认4M）

**如果不指定PE单位的话，例如设置lv=9M，就会给3个PE=12M，浪费了3M无法使用**

**工作中通常不指定PE，lvm会自动指定PE来提高分区效率的**

vgcreate 物理卷组 /dev/sdc1

vgcreate -s 1M 物理卷组 /dev/sdc2 **#1M这个物理卷组分配单位是1M，而不是默认的4M**

vgextend 物理卷组 /dev/sdc2 **#扩容物理卷组**

vgs

pvdisplay vgdisplay lvdisplay #查看详细信息

lvcreate -L 1G -n 逻辑卷名 物理卷组

lvcreate -l 40 -n 逻辑卷名 物理卷组 **#划分40M逻辑磁盘**

mkfs.xfs /dev/ansible/nginx #格式化

lvextend -L +200M /dev/ansible/nginx

xfs_growfs /dev/ansible/nginx **#格式化扩容空间(仅适用于xfs)**

resize2fs /dev/ansible/nginx **#格式化****扩容或缩小****空间(仅适用于ext系列**

#### 逻辑分区删除

lvremove /dev/ansbile/nginx

vgremove /物理卷组

pvremove /dev/sdc1

**补充**

跨系统格式：exFAT

XFS:大量的小文件或非常大的文件，并且需要高性能和可扩展性

EXT4:需要稳定性和广泛支持的通用应用，或者需要经常调整文件系统大小的场景

lsblk -f #查看所有的磁盘信息(**已格式化的会显示磁盘类型**)

**blkid 设**

**/etc/fstdb的内容格式：**

硬盘路径(/dev/sab) 挂载点(/test) xfs 挂载选项(**defaults**) 是否备份(0) 检查文件系统的顺序(0)

----------

📌**对象存储：**非DB类的结构化(图片视频)数据存储系统**(磁盘内容访问次数收费)**，例如百度云盘WEB

**块存储：**类似于使用主机内置**硬盘**(**硬盘使用时长收费**)。</description><guid isPermaLink="true">https://blog.mymaskking.dpdns.org//post/Linux-ci-pan-guan-li.html</guid><pubDate>Sat, 12 Apr 2025 21:43:08 +0000</pubDate></item><item><title>Linux知识点（基础知识）</title><link>https://blog.mymaskking.dpdns.org//post/Linux-zhi-shi-dian-%EF%BC%88-ji-chu-zhi-shi-%EF%BC%89.html</link><description>## 基础知识

💡

1.  ps &gt; File1时**优先执行管道符，管道符是先删除文件后再重新新建**

-   ls a.txt xxx.txt &gt;&gt; #标准输出

-   ls a.txt xxx.txt 2&gt;&gt; #异常输出

-   ls a.txt xxx.txt &amp;&gt; #标准和异常都输出

-   ls a.txt xxx.txt &gt; a.log 2&gt;&amp;1 #**2&gt;&amp;1把异常改写成标准输出**

1.  **cd - 返回进入此目录之前所在的目录**

1.  systemctl enable httpd --now **#启动服务并设置开机自启**

1.  nohup **#告诉系统即使终端关闭也不要停止这个命令**

&gt; 发展史：unix(19700101)-&gt;linux(1991)

### 云计算机

👋

Iaas 提供基础网络储存等，类似于毛胚房

Paas 可以直接进行开发测试，类似于公寓，只需要做自己想做的就好

Saas 所有软件都已经安装好，可以直接用，无需关注其他

### 系统层面

uname #查看内核名字

-   -r 显示内核版本

lscpu #查看Cpu信息

hostname #查看主机名 hostnamectl set-hostname aaa

alias 别名=真实命令 #设置临时别名

-   unalias 别名 #取消临时别名

poweroff #关机

```
/etc/shells #查看系统支持的shell解析器
/ect/rocky-release #查看系统版本（仅限rocky Linux）
```
&lt;!--stackedit_data:
eyJoaXN0b3J5IjpbMTI0MDAzNjM3XX0=
--&gt;
。</description><guid isPermaLink="true">https://blog.mymaskking.dpdns.org//post/Linux-zhi-shi-dian-%EF%BC%88-ji-chu-zhi-shi-%EF%BC%89.html</guid><pubDate>Sat, 12 Apr 2025 21:42:40 +0000</pubDate></item><item><title>Linux基础网络知识</title><link>https://blog.mymaskking.dpdns.org//post/Linux-ji-chu-wang-luo-zhi-shi.html</link><description># Wan/Lan

路由器--&gt;交换机

网络设备的架构：一对一，一对多，**多对多(星状集群)**

# 网络模型

![](http://www.kdocs.cn/api/v3/office/copy/Ny9nVFZFNXdyalpOVlZEdnZSTEh3NWNTdVBDYVVvRWhlNnZuM21SUjFYTkYxSDJFOVFsS3lncDNCV210d003QWxoYXdQc0tkOGUrWENQaEZpbDZsUUdHRGVOK3lCR1l4eFd5Wk1sdnYwTUpIaHg3ZTUrWjhRdFJoZjlSRGEvRGUrOGlkYTRla0lHdk5tQW85U1RyelJ2bjFuVTlNTkVOUVhqVnBZNHE3OWZRWGMxaHBRaEJTZTRaWnFBempzWk1LQitnM0lKVXBmN0xxMURZUWYvNlVhMGdOVVJPK093Z25QY2d2RklXc1BKUEl0MW5saS9SOXVhblFZc2xrN21zTnV3OVFjN3hMYmhJPQ==/attach/object/7V4HW5YXACQAI?)

💡

**网络层常见的协议：IP协议、ICMP协议和ARP协议等**

**ARP协议：**就是把ip地址解析为mac地址

arm -a

----------

**ICMP协议：**例（ping命令）

----------

四层协议：TCP/UPD

七层协议：Http/Https

### **数据发送**

![](http://www.kdocs.cn/api/v3/office/copy/Ny9nVFZFNXdyalpOVlZEdnZSTEh3NWNTdVBDYVVvRWhlNnZuM21SUjFYTkYxSDJFOVFsS3lncDNCV210d003QWxoYXdQc0tkOGUrWENQaEZpbDZsUUdHRGVOK3lCR1l4eFd5Wk1sdnYwTUpIaHg3ZTUrWjhRdFJoZjlSRGEvRGUrOGlkYTRla0lHdk5tQW85U1RyelJ2bjFuVTlNTkVOUVhqVnBZNHE3OWZRWGMxaHBRaEJTZTRaWnFBempzWk1LQitnM0lKVXBmN0xxMURZUWYvNlVhMGdOVVJPK093Z25QY2d2RklXc1BKUEl0MW5saS9SOXVhblFZc2xrN21zTnV3OVFjN3hMYmhJPQ==/attach/object/57FXW5YXACQAI?)

### **数据接收**

![](http://www.kdocs.cn/api/v3/office/copy/Ny9nVFZFNXdyalpOVlZEdnZSTEh3NWNTdVBDYVVvRWhlNnZuM21SUjFYTkYxSDJFOVFsS3lncDNCV210d003QWxoYXdQc0tkOGUrWENQaEZpbDZsUUdHRGVOK3lCR1l4eFd5Wk1sdnYwTUpIaHg3ZTUrWjhRdFJoZjlSRGEvRGUrOGlkYTRla0lHdk5tQW85U1RyelJ2bjFuVTlNTkVOUVhqVnBZNHE3OWZRWGMxaHBRaEJTZTRaWnFBempzWk1LQitnM0lKVXBmN0xxMURZUWYvNlVhMGdOVVJPK093Z25QY2d2RklXc1BKUEl0MW5saS9SOXVhblFZc2xrN21zTnV3OVFjN3hMYmhJPQ==/attach/object/5JKHY5YXADADS?)

### 协议数据单元

![](http://www.kdocs.cn/api/v3/office/copy/Ny9nVFZFNXdyalpOVlZEdnZSTEh3NWNTdVBDYVVvRWhlNnZuM21SUjFYTkYxSDJFOVFsS3lncDNCV210d003QWxoYXdQc0tkOGUrWENQaEZpbDZsUUdHRGVOK3lCR1l4eFd5Wk1sdnYwTUpIaHg3ZTUrWjhRdFJoZjlSRGEvRGUrOGlkYTRla0lHdk5tQW85U1RyelJ2bjFuVTlNTkVOUVhqVnBZNHE3OWZRWGMxaHBRaEJTZTRaWnFBempzWk1LQitnM0lKVXBmN0xxMURZUWYvNlVhMGdOVVJPK093Z25QY2d2RklXc1BKUEl0MW5saS9SOXVhblFZc2xrN21zTnV3OVFjN3hMYmhJPQ==/attach/object/SVPX65YXABQAY?)

### 设备与层的对应关系

![](http://www.kdocs.cn/api/v3/office/copy/Ny9nVFZFNXdyalpOVlZEdnZSTEh3NWNTdVBDYVVvRWhlNnZuM21SUjFYTkYxSDJFOVFsS3lncDNCV210d003QWxoYXdQc0tkOGUrWENQaEZpbDZsUUdHRGVOK3lCR1l4eFd5Wk1sdnYwTUpIaHg3ZTUrWjhRdFJoZjlSRGEvRGUrOGlkYTRla0lHdk5tQW85U1RyelJ2bjFuVTlNTkVOUVhqVnBZNHE3OWZRWGMxaHBRaEJTZTRaWnFBempzWk1LQitnM0lKVXBmN0xxMURZUWYvNlVhMGdOVVJPK093Z25QY2d2RklXc1BKUEl0MW5saS9SOXVhblFZc2xrN21zTnV3OVFjN3hMYmhJPQ==/attach/object/PNIIA5YXABQBA?)

# IP地址

**平常的****IP4****地址192.168.1.1，子网掩码：255.255.255.0是十进制，****IP6****是16进制**

👋

**IP类别优先看子网掩码，例：192.168.25.1/16是****B类地址**

子网掩码

A类/8（255.0.0.0）

B类/16(255.255.0.0)

C类/24(255.255.255.0)

&gt; **其中8是因为255的2进制是8个1，****下面的D，E类IP主要用于政府和医院等机构**

![](http://www.kdocs.cn/api/v3/office/copy/Ny9nVFZFNXdyalpOVlZEdnZSTEh3NWNTdVBDYVVvRWhlNnZuM21SUjFYTkYxSDJFOVFsS3lncDNCV210d003QWxoYXdQc0tkOGUrWENQaEZpbDZsUUdHRGVOK3lCR1l4eFd5Wk1sdnYwTUpIaHg3ZTUrWjhRdFJoZjlSRGEvRGUrOGlkYTRla0lHdk5tQW85U1RyelJ2bjFuVTlNTkVOUVhqVnBZNHE3OWZRWGMxaHBRaEJTZTRaWnFBempzWk1LQitnM0lKVXBmN0xxMURZUWYvNlVhMGdOVVJPK093Z25QY2d2RklXc1BKUEl0MW5saS9SOXVhblFZc2xrN21zTnV3OVFjN3hMYmhJPQ==/attach/object/ENJZLAIXADAEO?)

![](http://www.kdocs.cn/api/v3/office/copy/Ny9nVFZFNXdyalpOVlZEdnZSTEh3NWNTdVBDYVVvRWhlNnZuM21SUjFYTkYxSDJFOVFsS3lncDNCV210d003QWxoYXdQc0tkOGUrWENQaEZpbDZsUUdHRGVOK3lCR1l4eFd5Wk1sdnYwTUpIaHg3ZTUrWjhRdFJoZjlSRGEvRGUrOGlkYTRla0lHdk5tQW85U1RyelJ2bjFuVTlNTkVOUVhqVnBZNHE3OWZRWGMxaHBRaEJTZTRaWnFBempzWk1LQitnM0lKVXBmN0xxMURZUWYvNlVhMGdOVVJPK093Z25QY2d2RklXc1BKUEl0MW5saS9SOXVhblFZc2xrN21zTnV3OVFjN3hMYmhJPQ==/attach/object/7NSZXAIXAAQES?)

## 私网IP段

🔔

平常的家庭网络和公司都是私有网络，公网是全球唯一的

⭐网关使用的IP一般是xx.xx.xx.1或者xx.xx.xx.254,.**255是不能使用的，只作为广播使用**

简单记法:**10-10,****172.16-172.31****,****192.168-192.168**

10.0.0.0 - 10.**255.255.255**  
172.16.0.0 - 172.31.**255.255**  
192.168.0.0 - 192.168.**255.255**

# 交换机

## 转发原理

1.  初始化
2.  各个PC的MAC地址学习

👋

交换机自主学习老化时间300s更新一次

1.  广播未知数据帧
2.  PC回应
3.  交换机实现单薄通信

## 常用命令

enable 进入管理员模式

configure terminal 进入全局配置模式

interface fastEthernet 0/1 进入端口 fastEthernet：端口类型

show mac address-table 查看各个PC的Mac地址

## vlan(虚拟局域网)

&gt; 交换机和PC之间通过默认的vlan1进行静态交互，但是**在同一台交换机内****有****不同网段****PC的情况，通过在交换机内配置****vlan名(或ID)，****根据vlan找到其他交换机的****同名vlan内****的PC设备实现通信****目的：减少交互(广播)，减少因广播带来的延迟**

### vlan种类

💡

**（****静态****）基于端口，（****动态****）基于 MAC，基于 IP**

**相关命令**

```
#管理员模式
#创建Vlan第一种方法
swich#configure terminal
Switch(config)#vlan 5
Switch(config-vlan)#name 5hhh
#创建Vlan第二种方法
swich#vlan database 
Switch(vlan)#vlan 17 name 17v
#查看Vlan
swich#show vlan brief
swich#show vlan id 5
#把端口加到vlan中
Switch(config-if)#switchport access vlan 5
Switch(config)#interface range fastEthernet 0/2-10
Switch(config-if-range)#switchport access vlan 17
#删除vlan 方法1
swich#no vlan 5
#删除vlan 方法2,database下删除
switch(vlan)#no vlan 17
```

### **trunk(交换机之间互通)**

🔔

由于n个vlan，交换机之间不**会配置n个端口**，所以通过**trunk对数据包进行标识来**实现不同网段PC在多个交换机内的通信。</description><guid isPermaLink="true">https://blog.mymaskking.dpdns.org//post/Linux-ji-chu-wang-luo-zhi-shi.html</guid><pubDate>Sat, 12 Apr 2025 21:41:58 +0000</pubDate></item><item><title>软件版本选择</title><link>https://blog.mymaskking.dpdns.org//post/ruan-jian-ban-ben-xuan-ze.html</link><description>-   **系统/软件版本选择：通常选择双数版本，例如：1.2**
-   systemctl disable httpd --now **#取消开启自启并关闭**
-   https的加密：(早期)对称加密，(现在)非对称加密[例如，公钥私钥]

&gt; 第一次【S的公钥给了C】,第二次【C的公钥加密了三角给S】，第三次【S返回给C可以发送请求】，第四次【C用三角加密X给了S】,期间三角这个文件没有独自在互联网出现过 这就是非对称加密了，**类似于SSH**

-   /etc/rc.d/rc.local **#开机自启**
-   **Java版本：8****(23年以前主流****) 11 17****(23年主流)** **21**
&lt;!--stackedit_data:
eyJoaXN0b3J5IjpbNjM5NDQ1MDgyXX0=
--&gt;
。</description><guid isPermaLink="true">https://blog.mymaskking.dpdns.org//post/ruan-jian-ban-ben-xuan-ze.html</guid><pubDate>Sat, 12 Apr 2025 21:41:03 +0000</pubDate></item><item><title>AList私有云盘的部署（apk和docker）【安卓手机安装PC或Linux(含内网穿透)】</title><link>https://blog.mymaskking.dpdns.org//post/AList-si-you-yun-pan-de-bu-shu-%EF%BC%88apk-he-docker%EF%BC%89%E3%80%90-an-zhuo-shou-ji-an-zhuang-PC-huo-Linux%28-han-nei-wang-chuan-tou-%29%E3%80%91.html</link><description>⭐

**AList的docker****安装可以参考：**[**点我**](https://blog.csdn.net/2202_75326331/article/details/139613342)

docker版密码生成：

`# 随机生成一个密码`

`docker exec -it alist ./alist admin random`

``# 手动设置一个密码,`NEW_PASSWORD`是指你需要设置的密码``

`docker exec -it alist ./alist admin set NEW_PASSWORD`

----------

**AList官方的docker部署文档**：[点我](https://alist.nn.ci/zh/guide/install/docker.html#%E9%95%9C%E5%83%8F%E7%89%88%E6%9C%AC)

----------

**安卓版**参考这个[油管视频](https://www.youtube.com/watch?v=ZI539379XnY&amp;t=192s)

----------

**无意中刷到的一个**[油管视频](https://blog.nbvil.com/nat/nat-cf/)**也是做的内网穿透访问AList,用的是Docker-Compose**

```
version: '3.3'
services:
  alist:
    image: 'xhofe/alist:latest'  # 使用 latest 稳定版
    container_name: alist
    volumes:
      - './alist:/opt/alist/data'  # 文件映射到当前目录，方便管理
    ports:
      - '5244:5244'
    environment:
      - PUID=0
      - PGID=0
      - UMASK=022
    restart: unless-stopped

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=&lt;your-tunnel-token&gt;  # 提供 Token
```

```
docker-compose -f alist-compose.yml up -d
```
&lt;!--stackedit_data:
eyJoaXN0b3J5IjpbMjAzMzY4ODA2N119
--&gt;
。</description><guid isPermaLink="true">https://blog.mymaskking.dpdns.org//post/AList-si-you-yun-pan-de-bu-shu-%EF%BC%88apk-he-docker%EF%BC%89%E3%80%90-an-zhuo-shou-ji-an-zhuang-PC-huo-Linux%28-han-nei-wang-chuan-tou-%29%E3%80%91.html</guid><pubDate>Sat, 12 Apr 2025 21:39:24 +0000</pubDate></item><item><title>cloudflare做网络穿透(安卓手机安装PC或Linux(含内网穿透))</title><link>https://blog.mymaskking.dpdns.org//post/cloudflare-zuo-wang-luo-chuan-tou-%28-an-zhuo-shou-ji-an-zhuang-PC-huo-Linux%28-han-nei-wang-chuan-tou-%29%29.html</link><description>⭐

1.  下载cloudflare的安装包

`curl -L` [`https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64`](https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64) `-o /usr/local/bin/cloudflared`

1.  赋予执行权限

`chmod +x /usr/local/bin/cloudflared`

1.  确认是否安装成功

`cloudflared version`

1.  执行

`cloudflared service install 你的密钥`

**卸载命令**：`cloudflared service uninstall`

**Docker版看这里**

**参考这个链接**：[点我](https://sspai.com/post/79278)

**docker的附加参数：**

-   --link alist:alist #容器间相互通信

-   --network host #容器内的应用就能直接访问宿主机的 localhost

`docker run --link alist:alist cloudflare/cloudflared:latest tunnel --no-autoupdate run --token 你的token`

已废弃部分

⭐

1.  下载cloudflare的ubuntu文件

`curl -L --output cloudflared.deb` [`https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb`](https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb)

注意：这里curl可能会碰到https无法下载的问题，建议把文件放到http（**AList**）下面

1.  sudo dpkg -i cloudflared.deb

注意：这里可能会报错package architecture (amd64) does not match system (arm64)

解决：sudo dpkg -i --force-architecture cloudflared.deb （[点击参考](https://github.com/kubernetes/minikube/issues/10001)）

1.  sudo cloudflared service install 你的密钥

成功会显示：`Illegal instruction`

## 网页版SSH内网穿透

⭐

1.  **将服务器连接到 Cloudflare：**

-   **创建 Cloudflare Tunnel：** 登录到 Cloudflare Zero Trust 仪表板，导航至“Networks” &gt; “Tunnels”，点击“Create a tunnel”。</description><guid isPermaLink="true">https://blog.mymaskking.dpdns.org//post/cloudflare-zuo-wang-luo-chuan-tou-%28-an-zhuo-shou-ji-an-zhuang-PC-huo-Linux%28-han-nei-wang-chuan-tou-%29%29.html</guid><pubDate>Sat, 12 Apr 2025 21:38:36 +0000</pubDate></item><item><title>安卓机上运行Linux（安卓手机安装PC或Linux(含内网穿透)）</title><link>https://blog.mymaskking.dpdns.org//post/an-zhuo-ji-shang-yun-xing-Linux%EF%BC%88-an-zhuo-shou-ji-an-zhuang-PC-huo-Linux%28-han-nei-wang-chuan-tou-%29%EF%BC%89.html</link><description>⭐

**目前网上****(含ChatGPT)**给出的最优方案就是使用**Termux(**[去官网点我](https://github.com/termux/termux-app)**)+QEMU**

----------

**正在使用的方案(魔改后的Termux)：**

A：已经内置了**alpine系统的Termux(**[去官网点我](https://github.com/FakeRajbhx/alpine-term)**)(****配置过低时使用)**

原博客使用教程：[点我](https://www.cnblogs.com/yanqb/p/17367504.html)

直接查看使用教程：[点我](https://kdocs.cn/l/cheRD9wHnLXd?linkname=zvWJTuBssB)

优点：

-   内置docker，sshd，Nginx

-   apk大小为606M

-   可以在更低配置上运行(高配置手机可能无法运行)

缺点：

-   基于QEMU，每次重启都要重新设置映射端口(命令如下)

`hostfwd_add tcp::2222-:22`

B：内置了**alpine系统的Termux增强版(****🌟****优先推荐使用)**

原博客使用教程：[点我](https://blog.csdn.net/LJZxiaolongbao/article/details/139145986)

直接查看使用教程：[点我](https://www.cnblogs.com/yanqb/p/17367504.html)

直接下载APK：[点我](https://d.icdown.club/repository/main/Alpine_Termux.apk)

优点：

-   魔改了QEMU，端口映射一次设置就可以了

-   apk大小为126M

缺点：

-   没有内置docker，sshd，需要手动安装

-   无法在低配置上运行(高配置手机可以运行)

**测试的安卓配置：**

1.  `CPU：1.3GHz晓龙450八核`

1.  `4G运行内存+32G储存空间`

1.  `Android7.1.2`

----------

国外大佬使用原版**Termux**的视频（[点我](https://www.youtube.com/watch?v=xiMJpaWi5Nk)）

## A：内置了**alpine系统的Termux使用教程**

&gt; APK源和DNS更换这一步，如果**没有魔法网络**请**务必提前做了**，否则都会从国外的镜像来下载软件

### apk安装完成后左滑，在**弹出画面中选择****QEMU****，输入下面****端口映射命令(SSH连接使用)**

```
hostfwd_add tcp::2222-:22 
```

注意：正常情况输入完成回车是没有任何打印内容的

### 左滑弹出画面选择**[2]/dev/ttyS0****，等待alpine系统启动完成后****切换到root**

&gt; 登录用户 `alpine` 密码: `alpine`  
&gt; 切换到`root`账户，输入`sudo -s` 密码：`alpine`

### 修改sshd的配置文件

```
方式1：
sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
sed -i 's/PermitRootLogin no/PermitRootLogin yes/g' /etc/ssh/sshd_config
service sshd restart
```

```
#方式2：
apt install vim #可能需要安装vim
vim /etc/ssh/sshd_config
#修改下面内容为yes：
PasswordAuthentication yes
PermitRootLogin yes
#重启sshd服务
service sshd restart
```

### 设置内置Docker服务为开机自启

```
rc-update add docker
service docker start

#后台启动
setsid containerd
setsid dockerd
# 测试
docker info
```

### 修改docker的镜像源

&gt; vi /etc/docker/daemon.json  
&gt; 把下面内容复制进去

```
{
    'registry-mirrors': [
    'https://docker.1panelproxy.com',
    'https://2a6bf1988cb6428c877f723ec7530dbc.mirror.swr.myhuaweicloud.com',
    'https://docker.m.daocloud.io',
    'https://hub-mirror.c.163.com',
    'https://mirror.baidubce.com',
    'https://your_preferred_mirror',
    'https://dockerhub.icu',
    'https://docker.registry.cyou',
    'https://docker-cf.registry.cyou',
    'https://dockercf.jsdelivr.fyi',
    'https://docker.jsdelivr.fyi',
    'https://dockertest.jsdelivr.fyi',
    'https://mirror.aliyuncs.com',
    'https://dockerproxy.com',
    'https://mirror.baidubce.com',
    'https://docker.m.daocloud.io',
    'https://docker.nju.edu.cn',
    'https://docker.mirrors.sjtug.sjtu.edu.cn',
    'https://docker.mirrors.ustc.edu.cn',
    'https://mirror.iscas.ac.cn',
    'https://docker.rainbond.cc'
    ]
}
```

**检测镜像源是否被使用**

```
docker info
```

### (国内使用必须配置)APK源和DNS更换，时区修改

&gt; 更换阿里云+DNSPOD 的DNS

```
sed -i '/^#/! s/^/#/' /etc/apk/repositories
echo 'https://mirrors.aliyun.com/alpine/v3.9/main' &gt;&gt; /etc/apk/repositories
echo 'https://mirrors.aliyun.com/alpine/v3.9/community' &gt;&gt; /etc/apk/repositories

sed -i '/^#/! s/^/#/' /etc/resolv.conf
echo 'nameserver 223.5.5.5' &gt;&gt; /etc/resolv.conf
echo 'nameserver 223.6.6.6' &gt;&gt; /etc/resolv.conf

apk update
```

&gt; 时区修改

```
setup-timezone
等到提示Which timezone are you in? ('?' for list) [UTC]，然后输入
Asia/Shanghai
```

### (补充)安装Docker Compose

&gt; 1.检查最新版本号：

```
DOCKER_COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)
```

⭐

遇到mksh: adk: inaccessible or not found

请执行`apk update;apk add curl;apk add jq`

&gt; 2.下载并安装 Docker Compose:

```
curl -L 'https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)' -o /usr/local/bin/docker-compose
```

&gt; 3.给 Docker Compose 添加执行权限并检查版本

```
chmod +x /usr/local/bin/docker-compose
docker-compose --version
```

## B：内置alpine系统的Termux增强版**使用教程**

### apk安装后会有弹出画面，点击Settings设置SSH服务端口映射

![](http://www.kdocs.cn/api/v3/office/copy/TCtnSVpVN0JkUCtmN053dHFCOUxzUmNzZUxvbW9VelQzL3F0Mkh5TUg1bWNwUmFSL2drWjZwNWlWQVFWaUl3dlpqd2ZuMkVqQXBFUUlVQjdDanpCVUNhMnpzQVc2L3lTMDZoNEVlMmtlakR5VUZtbkVleUtSUlJaR1NlMTBFNVhSZ3NmL2xVLytONXVVeWFqMG1TY0ZWVFpYajlHa2xrcCtmR1dtNzdDNnV4aUE4UERYVnhwZkp3aGFSZXJkaVFCN1UxYmVOZ0xta1ZtRmtUYTZsY1pnc3JjRU41a0o2QkVobFpQKzVhTGh4VGlWa0ZEZUFIeHNvaGo1aDVmaUFybVhwUHNDazVaa0xnPQ==/attach/object/HJEDEXI7ABQGO?)

```
tcp:2022:22
#端口：2022是你用XShell连接时用的
#端口：22是alpinex系统的默认端口
```

### 系统启动完成后直接输入root免密登录

&gt; APK源和DNS更换这一步，如果**没有魔法网络**请**务必提前做了**，否则都会从国外的镜像来下载软件  
&gt; [**点我**](https://kdocs.cn/l/cheRD9wHnLXd?linkname=R3mSsqR6Oa)**去看修改APK源和DNS方法**

### 安装SSH服务

```
apk update
#安装ssh
apk add openssh
#启动ssh
rc-service sshd start
# 设置开机启动
rc-update add sshd
```

&gt; 修改ssd_config的配置文件，并且设置root密码，运行root登录

```
sed -i 's/PermitRootLogin no/PermitRootLogin yes/g' /etc/ssh/sshd_config
passwd abc123456 #设置root密码
```

### 安装docker服务

```
#安装docker
apk add docker
#启动docker
service docker start
docker version
#开机自启
rc-update add docker boot
```

&gt; 修改Docker镜像源：[**点我**](https://kdocs.cn/l/cheRD9wHnLXd?linkname=hxebueOkWr)

&gt; 安装Docker Compose ：[**点我**](https://kdocs.cn/l/cheRD9wHnLXd?linkname=No8HoMRicO)

## 补充资料

### 安卓APK(linux系统)

&gt; 这是我在找**安卓**上的**linux系统apk**的时候找到的软件，下面的软件都支持linux系统，**最好用的是****userLand****，谷歌商店评分4.7。</description><guid isPermaLink="true">https://blog.mymaskking.dpdns.org//post/an-zhuo-ji-shang-yun-xing-Linux%EF%BC%88-an-zhuo-shou-ji-an-zhuang-PC-huo-Linux%28-han-nei-wang-chuan-tou-%29%EF%BC%89.html</guid><pubDate>Sat, 12 Apr 2025 21:37:17 +0000</pubDate></item><item><title>安卓手机安装PC或Linux(含内网穿透)</title><link>https://blog.mymaskking.dpdns.org//post/an-zhuo-shou-ji-an-zhuang-PC-huo-Linux%28-han-nei-wang-chuan-tou-%29.html</link><description># 先要知道的一些内容

## **手机的系统架构是什么？如何看？**

&gt; 手机的 CPU 通常使用 ARM 架构（如 ARMv7, ARMv8）或较少见的 x86 架构。</description><guid isPermaLink="true">https://blog.mymaskking.dpdns.org//post/an-zhuo-shou-ji-an-zhuang-PC-huo-Linux%28-han-nei-wang-chuan-tou-%29.html</guid><pubDate>Sat, 12 Apr 2025 21:35:08 +0000</pubDate></item><item><title>关于魔法网络的解决</title><link>https://blog.mymaskking.dpdns.org//post/guan-yu-mo-fa-wang-luo-de-jie-jue.html</link><description>
-   **域名的DNS检测**：[https://myssl.com/dns_check.html#dns_check](https://myssl.com/dns_check.html#dns_check)

![](http://www.kdocs.cn/api/v3/office/copy/YnJLSHY1ZmFodGN6R2tLMitlTWRNU2VnUGNnZkU1L0NVZVE2NGRQRlhodnhJZytsTFNxdG9xQngwYjNVM0pwTTBSTmJJVWtmamxIWEE1TWcrVm1SZEdlOE82OFlOOEs5eGdIUGFXbDhFYyt1WEtUQlNLbUc3YUQ1Q1ZYQ0Z3RTZjUUd5OEVsV1hvTFV1WGthVklxaTArcmpWa1liYnRyTng3NXJnbkxsMThTNWlEOXBxT1NyQXZCQ3piUThZRXFLb1NwMldLbkRFTk1LL3BXVGI3YmJ3c0QyRkd4UmtBaEFYMDZTcDVsNFh6Y1JxeFhVSUZYeUhZSGljcHBmUGlReGNaVXNWcUVNa2o0PQ==/attach/object/GAXX2ZA7ADQHI?)

-   **在线Tcping**：[https://www.itdog.cn/tcping/hello.mymaskking.ggff.net](https://www.itdog.cn/tcping/hello.mymaskking.ggff.net)

![](http://www.kdocs.cn/api/v3/office/copy/YnJLSHY1ZmFodGN6R2tLMitlTWRNU2VnUGNnZkU1L0NVZVE2NGRQRlhodnhJZytsTFNxdG9xQngwYjNVM0pwTTBSTmJJVWtmamxIWEE1TWcrVm1SZEdlOE82OFlOOEs5eGdIUGFXbDhFYyt1WEtUQlNLbUc3YUQ1Q1ZYQ0Z3RTZjUUd5OEVsV1hvTFV1WGthVklxaTArcmpWa1liYnRyTng3NXJnbkxsMThTNWlEOXBxT1NyQXZCQ3piUThZRXFLb1NwMldLbkRFTk1LL3BXVGI3YmJ3c0QyRkd4UmtBaEFYMDZTcDVsNFh6Y1JxeFhVSUZYeUhZSGljcHBmUGlReGNaVXNWcUVNa2o0PQ==/attach/object/4IHH4ZA7ABAAE?)

-   **虚拟信息生成器1：**[https://www.meiguodizhi.com/jp-address](https://www.meiguodizhi.com/jp-address)
-   **虚拟信息生成器2：**[https://www.shenfendaquan.com/](https://www.shenfendaquan.com/)

![](http://www.kdocs.cn/api/v3/office/copy/YnJLSHY1ZmFodGN6R2tLMitlTWRNU2VnUGNnZkU1L0NVZVE2NGRQRlhodnhJZytsTFNxdG9xQngwYjNVM0pwTTBSTmJJVWtmamxIWEE1TWcrVm1SZEdlOE82OFlOOEs5eGdIUGFXbDhFYyt1WEtUQlNLbUc3YUQ1Q1ZYQ0Z3RTZjUUd5OEVsV1hvTFV1WGthVklxaTArcmpWa1liYnRyTng3NXJnbkxsMThTNWlEOXBxT1NyQXZCQ3piUThZRXFLb1NwMldLbkRFTk1LL3BXVGI3YmJ3c0QyRkd4UmtBaEFYMDZTcDVsNFh6Y1JxeFhVSUZYeUhZSGljcHBmUGlReGNaVXNWcUVNa2o0PQ==/attach/object/AXRICZA7ABAA6?)

-   **我的IP信息：**[https://www.ipaddress.my/?lang=zh_CN](https://www.ipaddress.my/?lang=zh_CN)

![](http://www.kdocs.cn/api/v3/office/copy/YnJLSHY1ZmFodGN6R2tLMitlTWRNU2VnUGNnZkU1L0NVZVE2NGRQRlhodnhJZytsTFNxdG9xQngwYjNVM0pwTTBSTmJJVWtmamxIWEE1TWcrVm1SZEdlOE82OFlOOEs5eGdIUGFXbDhFYyt1WEtUQlNLbUc3YUQ1Q1ZYQ0Z3RTZjUUd5OEVsV1hvTFV1WGthVklxaTArcmpWa1liYnRyTng3NXJnbkxsMThTNWlEOXBxT1NyQXZCQ3piUThZRXFLb1NwMldLbkRFTk1LL3BXVGI3YmJ3c0QyRkd4UmtBaEFYMDZTcDVsNFh6Y1JxeFhVSUZYeUhZSGljcHBmUGlReGNaVXNWcUVNa2o0PQ==/attach/object/KMHI6ZA7ACQE6?)

-   **临时邮箱**[**https://temp-mail.org/zh**](https://temp-mail.org/zh)**(注意每次打开都要使用隐私模式)**
&lt;!--stackedit_data:
eyJoaXN0b3J5IjpbLTE5ODc5ODExMDJdfQ==
--&gt;
。</description><guid isPermaLink="true">https://blog.mymaskking.dpdns.org//post/guan-yu-mo-fa-wang-luo-de-jie-jue.html</guid><pubDate>Sat, 12 Apr 2025 14:52:41 +0000</pubDate></item></channel></rss>