name: Publish Issues

on:
  push:
    paths:
      - 'issues/*.md'

permissions:
  contents: read
  issues: write

jobs:
  sync-issues:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # 为 git diff 提供前一次提交信息

      - name: 🐛 显示调试信息
        run: |
          echo "🔧 当前分支：" $(git rev-parse --abbrev-ref HEAD)
          echo "🕒 最近提交："
          git log -2 --oneline
          echo "📁 当前文件列表："
          ls -R

      - name: 📂 获取本次提交变更的 issues/*.md 文件
        id: get_changed_files
        run: |
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          echo "🔍 当前分支：$BRANCH"

          if [[ "$BRANCH" == "main" ]]; then
            CHANGED_FILES=$(git diff --name-only HEAD^ | grep '^issues/.*\.md$' || true)
          else
            git fetch origin main
            CHANGED_FILES=$(git diff --name-only origin/main...HEAD | grep '^issues/.*\.md$' || true)
          fi

          echo "📂 本次获取到的md文件：$CHANGED_FILES"

          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          echo "$CHANGED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: 📝 创建或更新 Issues
        if: env.CHANGED_FILES != ''
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "📦 正在处理 md 文件："
          echo "$CHANGED_FILES"

          for file in $CHANGED_FILES; do
            echo "📄 准备处理：$file"

            # 提取标签（可选）
            FIRST_LINE=$(head -n 1 "$file")
            if [[ "$FIRST_LINE" == ISSUE_LABELS:* ]]; then
              LABELS=$(echo "$FIRST_LINE" | sed 's/^ISSUE_LABELS:[[:space:]]*//' | tr -d '\r')
              BODY=$(tail -n +2 "$file")
              echo "🏷️ 检查获取到的标签：'$LABELS'"
            else
              LABELS=""
              BODY=$(cat "$file")
              echo "ℹ️ 未设置标签"
            fi

            TITLE=$(basename "$file" .md | sed 's/[-_]/ /g')

            echo "🔍 检查是否已有同名 issue: '$TITLE'"
            ISSUE_NUMBER=$(gh issue list \
              --state all \
              --search "$TITLE in:title" \
              --json number,title \
              | jq -r ".[] | select(.title==\"$TITLE\") | .number")

            if [[ -n "$ISSUE_NUMBER" ]]; then
              echo "♻️ 更新已存在的 issue #$ISSUE_NUMBER"
              if [[ -n "$LABELS" ]]; then
                gh issue edit "$ISSUE_NUMBER" --body "$BODY" --add-label "$LABELS" || echo "⚠️ 标签添加失败，可能标签不存在"
              else
                gh issue edit "$ISSUE_NUMBER" --body "$BODY"
              fi
            else
              echo "🆕 创建新的 issue: $TITLE"
              if [[ -n "$LABELS" ]]; then
                gh issue create -t "$TITLE" -b "$BODY" --label "$LABELS" || echo "⚠️ 标签创建失败，可能标签不存在"
              else
                gh issue create -t "$TITLE" -b "$BODY"
              fi
            fi

            echo "✅ 完成：$TITLE"
          done