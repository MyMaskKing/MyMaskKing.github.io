name: Publish Issues

on:
  push:
    paths:
      - 'issues/*.md'

permissions:
  contents: read
  issues: write

jobs:
  publish_issues:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # 允许 git diff 比较最近两次提交

      - name: Install GitHub CLI and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Create or update GitHub Issues from markdown changes
        run: |
          echo "📂 获取本次提交变更的 issues/*.md 文件"
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep '^issues/.*\.md$' || true)

          if [[ -z "$CHANGED_FILES" ]]; then
            echo "✅ 本次提交没有变更任何 issues/*.md 文件，跳过处理"
            exit 0
          fi

          for file in $CHANGED_FILES; do
            if [[ ! -f "$file" ]]; then
              echo "⚠️ $file 已被删除，跳过"
              continue
            fi

            TITLE=$(basename "$file" .md | sed 's/[-_]/ /g')

            FIRST_LINE=$(head -n 1 "$file")
            if [[ "$FIRST_LINE" == ISSUE_LABELS:* ]]; then
              LABELS=$(echo "$FIRST_LINE" | sed 's/^ISSUE_LABELS:[[:space:]]*//')
              BODY=$(tail -n +2 "$file")
              echo "🔍 检查获取到的标签：'$LABELS'"
            else
              LABELS=""
              BODY=$(cat "$file")
            fi

            # 自动创建缺失标签
            if [[ -n "$LABELS" ]]; then
              IFS=',' read -ra LABEL_ARR <<< "$LABELS"
              for label in "${LABEL_ARR[@]}"; do
                CLEAN_LABEL=$(echo "$label" | xargs)
                echo "🏷️ 确保标签 '$CLEAN_LABEL' 存在"
                gh label create "$CLEAN_LABEL" --description "Auto-created label" --color "ededed" 2>/dev/null || true
              done
            fi

            echo "🔍 检查是否已有同名 issue: '$TITLE'"
            ISSUE_NUMBER=$(gh issue list \
              --state all \
              --search "$TITLE in:title" \
              --json number,title \
              | jq -r ".[] | select(.title==\"$TITLE\") | .number")

            if [[ -n "$ISSUE_NUMBER" ]]; then
              echo "♻️ 更新已存在的 issue #$ISSUE_NUMBER"
              if [[ -n "$LABELS" ]]; then
                gh issue edit "$ISSUE_NUMBER" --body "$BODY" --add-label "$LABELS"
              else
                gh issue edit "$ISSUE_NUMBER" --body "$BODY"
              fi
            else
              echo "🆕 创建新的 issue: $TITLE"
              if [[ -n "$LABELS" ]]; then
                gh issue create -t "$TITLE" -b "$BODY" --label "$LABELS"
              else
                gh issue create -t "$TITLE" -b "$BODY"
              fi
            fi

            echo "✅ 完成处理: $TITLE"
          done
        env:
          GH_TOKEN: ${{ github.token }}
